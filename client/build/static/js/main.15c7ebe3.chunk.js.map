{"version":3,"sources":["util/route.js","util/session.js","actions/errors.js","actions/session.js","static/Floating-burger-PNG.png","static/Blue-Cheese-Burger.jpg","static/grilledchickenburger.png","components/splittext.component.js","util/cart.js","actions/cart.js","actions/menu.js","components/home.component.js","util/menu.js","components/banner.component.js","components/menu.component.js","components/cart.component.js","components/admin_add.component.js","actions/types.js","components/register.component.js","actions/authActions.js","components/login.component.js","App.js","reducers/session/session.js","reducers/cart/cartItems.js","reducers/root.js","reducers/menu/menu.js","reducers/errors/errors.js","reducers/cart/cart.js","store/store.js","index.js"],"names":["mapStateToProps","session","userId","userRole","loggedIn","Boolean","admin","AuthRoute","withRouter","connect","path","Component","component","render","props","to","ProtectedRoute","baseUri","login","user","fetch","method","body","JSON","stringify","headers","checkLoggedIn","a","console","log","response","json","menu","menuItems","preloadedState","RECEIVE_ERRORS","CLEAR_ERRORS","receiveErrors","message","type","RECEIVE_CURRENT_USER","LOGOUT_CURRENT_USER","receiveCurrentUser","SplitText","aria-label","this","copy","role","split","map","char","index","style","aria-hidden","React","updateCart","cart","GET_CURRENT_CART","UPDATE_CURRENT_CART","SET_CURRENT_CART_ITEM","updateCurrentCart","dispatch","apiUtil","data","ok","GET_MENU_ITEMS","GET_MENU_ITEM","ADD_MENU_ITEM","userName","getAllMenuItems","useEffect","Banner","className","Container","Row","item","category","Col","Card","Body","Title","name","Subtitle","price","description","Button","variant","size","onClick","active","updatedCart","_id","customer","items","newCart","history","push","handleOrder","Img","as","Image","src","image","burger","fluid","alt","Carousel","indicators","Item","interval","Caption","loading","chicken","bacon","cartItems","setCartItems","cartItem","updateCartitems","xs","Add","useState","setName","setCategory","setDescription","setImage","setPrice","protein","cheese","adds","veg","sauce","options","setOptions","handleOptions","e","evt","selected","o","value","prevState","Form","onSubmit","preventDefault","menuItem","length","then","res","catch","err","Group","control","Label","Control","placeholder","onChange","target","rows","enum","default","option","Object","keys","v","multiple","selectedOptions","GET_ERRORS","state","auth","errors","registerUser","userData","axios","post","payload","email","setEmail","password","setPassword","password2","setPassword2","loginUser","logout","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","exact","Home","Menu","Cart","Register","Login","_nullSession","username","intialCartState","combineReducers","freeze","store","createStore","reducer","applyMiddleware","thunk","renderApp","configureStore","window","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.15c7ebe3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, withRouter } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = ({ session: { userId, userRole } }) => ({\r\n  loggedIn: Boolean(userId),\r\n  admin: userRole === \"Admin\"\r\n});\r\n\r\nconst Auth = ({ loggedIn, path, component: Component }) => (\r\n  <Route\r\n    path={path}\r\n    render={props => (\r\n      loggedIn ?\r\n      <Redirect to='/' /> :\r\n      <Component {...props} />\r\n    )}\r\n  />\r\n);\r\n\r\nconst Protected = ({ admin, loggedIn, path, component: Component }) => (\r\n  <Route\r\n    path={path}\r\n    render={props => (\r\n      (loggedIn && admin )? \r\n      <Component {...props} /> :\r\n      <Redirect to='/login' />\r\n    )}\r\n  />\r\n);\r\n\r\nexport const AuthRoute = withRouter(\r\n  connect(mapStateToProps)(Auth)\r\n);\r\n\r\nexport const ProtectedRoute = withRouter(\r\n  connect(mapStateToProps)(Protected)\r\n);","const baseUri = \"http://localhost:5000/\"\r\n\r\nexport const login = user => (\r\n    fetch(\"session\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    \r\n  );\r\n  \r\n  export const signup = user => (\r\n    fetch(\"users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n  );\r\n  \r\n  export const logout = () => (\r\n    fetch(\"session\", { method: \"DELETE\" })\r\n  );\r\n  \r\n  export const checkLoggedIn = async () => {\r\n    console.log(\"Check logged In\")\r\n    console.log(`${baseUri}/session`)\r\n    const response = await fetch(`${baseUri}session`);\r\n    console.log(response)\r\n    const { user } = await response.json();\r\n    console.log(`User is ${user}`)\r\n    console.log(\"GEtting MEnu Items\")\r\n    const menu = await fetch(`${baseUri}menu/menuItems`);\r\n    const  menuItems  = await menu.json()\r\n    let preloadedState = {};\r\n    // if (user) {\r\n      preloadedState = {\r\n        session: user ? user : \"\",\r\n        menuItems: menuItems ? menuItems : \"\"\r\n      // };\r\n    }\r\n    return preloadedState;\r\n  };","export const RECEIVE_ERRORS = \"RECEIVE_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const receiveErrors = ({ message }) => ({\r\n  type: RECEIVE_ERRORS,\r\n  message\r\n});\r\n\r\nexport const clearErrors = () => ({\r\n  type: CLEAR_ERRORS\r\n});\r\n","import * as apiUtil from \"../util/session\";\r\nimport { receiveErrors } from \"./errors\";\r\n\r\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\r\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\r\n\r\nconst receiveCurrentUser = user => ({\r\n  type: RECEIVE_CURRENT_USER,\r\n  user\r\n});\r\n\r\nconst logoutCurrentUser = () => ({\r\n  type: LOGOUT_CURRENT_USER\r\n});\r\n\r\nexport const login = user => async dispatch => {\r\n  console.log(user)\r\n  const response = await apiUtil.login(user);\r\n  console.log(response)\r\n  const data = await response.json();\r\n\r\n  if (response.ok) {\r\n    console.log(data)\r\n    return dispatch(receiveCurrentUser(data));\r\n  }\r\n  return dispatch(receiveErrors(data));\r\n};\r\n\r\nexport const signup = user => async dispatch => {\r\n  const response = await apiUtil.signup(user);\r\n  const data = await response.json();\r\n  \r\n  if (response.ok) {\r\n    return dispatch(receiveCurrentUser(data));\r\n  }\r\n  return dispatch(receiveErrors(data));\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  const response = await apiUtil.logout();\r\n  console.log(response)\r\n  const data = await response.json();\r\n\r\n  if (response.ok) {\r\n    return dispatch(logoutCurrentUser());\r\n  }\r\n  return dispatch(receiveErrors(data));\r\n};","export default __webpack_public_path__ + \"static/media/Floating-burger-PNG.2f9945d5.png\";","export default __webpack_public_path__ + \"static/media/Blue-Cheese-Burger.750507bf.jpg\";","export default __webpack_public_path__ + \"static/media/grilledchickenburger.3652d633.png\";","import React from \"react\";\r\n\r\nexport default class SplitText extends React.Component {\r\n    render() {\r\n        return (\r\n          <span aria-label={this.props.copy} role={this.props.role}>\r\n            {this.props.copy.split(\"\").map(function (char, index) {\r\n              let style = { \"animationDelay\": 0.5 + index / 10 + \"s\" };\r\n              return (\r\n                <span aria-hidden=\"true\" key={index} style={style}>\r\n                  {char}\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      }\r\n  }","export const getCarts = () =>\r\n  fetch(\"cart/\", {\r\n    method: \"GET\",\r\n  });\r\n\r\nexport const getCart = (cart) =>\r\n  fetch(`cart/${cart}`, {\r\n    method: \"GET\",\r\n  });\r\n\r\nexport const createCart = (cart) =>\r\n  fetch(\"cart/add\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(cart),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\nexport const updateCart = (cart) =>\r\n  fetch(`cart/update`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(cart),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n","import * as apiUtil from \"../util/cart\";\r\nimport {getMenuItem} from \"../util/menu\"\r\nimport { receiveErrors } from \"./errors\";\r\n\r\nexport const GET_CURRENT_CART = \"GET_CURRENT_CART\";\r\nexport const UPDATE_CURRENT_CART = \"UPDATE_CURRENT_CART\";\r\nexport const SET_CURRENT_CART_ITEM = \"SET_CURRENT_CART_ITEM\";\r\n\r\nconst setCurrentCartItem = (cartItem) => ({\r\n  type: SET_CURRENT_CART_ITEM,\r\n  cartItem,\r\n});\r\n\r\nconst getCurrentCart = (cart) => ({\r\n  type: GET_CURRENT_CART,\r\n  cart,\r\n});\r\n\r\nconst updateCurrentCart = (cart) => ({\r\n  type: UPDATE_CURRENT_CART,\r\n  cart,\r\n});\r\n\r\nexport const updateCart = (cart) => async (dispatch) => {\r\n  const response = await apiUtil.updateCart(cart);\r\n  const data = await response.json();\r\n\r\n  if (response.ok) {\r\n    return dispatch(updateCurrentCart(data));\r\n  }\r\n  return dispatch(receiveErrors(data));\r\n};\r\n\r\nexport const getCart = (cart) => async (dispatch) => {\r\n  const response = await apiUtil.getCart(cart);\r\n  console.log(response);\r\n  const data = await response.json();\r\n\r\n  if (response.ok) {\r\n    console.log(data);\r\n    return dispatch(getCart(data));\r\n  }\r\n  return dispatch(receiveErrors(data));\r\n};\r\n\r\nexport const updateCartitems = (item) => async (dispatch) => {\r\n    console.log(\"Updating Cart Items\")\r\n    const response = await getMenuItem(item);\r\n    console.log(response)\r\n    const data = await response.json()\r\n\r\n    if (response.ok) {\r\n        console.log(data)\r\n        return dispatch(setCurrentCartItem(data));\r\n    }\r\n    return dispatch(receiveErrors(data))\r\n//   return (dispatch) => {\r\n//       fetch(`menu/menuItems/${item}`, {\r\n//         method: \"GET\",\r\n//       })\r\n//         .then((response) => response.json())\r\n//         .then((result) => {\r\n//           console.log(result);\r\n//           return dispatch(\r\n//             setCurrentCartItems((prevState) => [...prevState, result])\r\n//           );\r\n//         })\r\n    \r\n//   };\r\n};\r\n","import * as apiUtil from \"../util/menu\"\r\nimport { receiveErrors } from \"./errors\";\r\n\r\nexport const GET_MENU_ITEMS = \"GET_MENU_ITEMS\";\r\nexport const GET_MENU_ITEM = \"GET_MENU_ITEM\";\r\nexport const ADD_MENU_ITEM = \"ADD_MENU_ITEM\";\r\n\r\nconst getMenuItems = menuItems => ({\r\n    type: GET_MENU_ITEMS,\r\n    menuItems\r\n})\r\n\r\nconst getMenuItem = menuItem => ({\r\n    type: GET_MENU_ITEM,\r\n    menuItem\r\n})\r\n\r\nconst addMenuItem = menuItem => ({\r\n    type: ADD_MENU_ITEM,\r\n    menuItem\r\n})\r\n\r\nexport const getAllMenuItems = () => async dispatch => {\r\n    // fetch(\"menu/menuItems\", {\r\n    //     method: \"GET\",\r\n    //   }).then((response) => {\r\n    //       if(!response.ok) {\r\n    //           throw Error(response.statusText)\r\n    //       }\r\n\r\n    //       return response\r\n    //   }).then((response) => response.json())\r\n    //   .then((menuItems) => dispatch(getMenuItems))\r\n    const response = await apiUtil.getMenuItems();\r\n    const data = await response.json()\r\n    \r\n    if(response.ok) {\r\n        return dispatch(getMenuItems(data))\r\n    }\r\n    return dispatch(receiveErrors(data))\r\n}","import React, { useEffect, useState} from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image, { propTypes } from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../css/home.css\";\r\nimport burger from \"../static/Floating-burger-PNG.png\";\r\nimport Banner from \"./banner.component\";\r\nimport { postFetch } from \"../hooks/api\";\r\n// import { updateCart } from '../util/cart'\r\nimport { updateCart } from \"../actions/cart\";\r\nimport { getAllMenuItems } from \"../actions/menu\"\r\nimport { getMenuItem } from \"../util/menu\";\r\n\r\nconst imgSrc = \"http://localhost:5000/images/\";\r\n\r\nconst mapStateToProps = ({\r\n  session: { userId, userName, userRole },\r\n  menuItems,\r\n  cart,\r\n}) => ({\r\n  userId,\r\n  userName,\r\n  userRole,\r\n  menuItems,\r\n  cart,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCart: (cart) => dispatch(updateCart(cart)),\r\n  getAllMenuItems: () => dispatch(getAllMenuItems())\r\n});\r\n\r\nfunction Home(props) {\r\n  console.log(props);\r\n  var menuItems = props.menuItems;\r\n  var cart = props.cart;\r\n  const handleOrder = (item) => {\r\n    if (!props.userId) {\r\n      console.log(\"Not Logged in\");\r\n      props.history.push('/login')\r\n      // <Redirect to='/login' />\r\n    } else {\r\n      // console.log(cart);\r\n      if (!cart || cart.active === false) {\r\n        const newCart = {\r\n          customer: props.userId,\r\n          items: [{ item: item }],\r\n          active: true,\r\n        };\r\n        props.updateCart(newCart);\r\n      } else {\r\n        const updatedCart = {\r\n          _id: cart._id,\r\n          customer: props.userId,\r\n          items: [{ item: item }],\r\n          active: true,\r\n        };\r\n        props.updateCart(updatedCart);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deactivateCart = () => {\r\n    console.log(cart);\r\n    const oldCart = { ...cart, active: false };\r\n    props.updateCart(oldCart);\r\n  };\r\n\r\nuseEffect (()=> {\r\n props.getAllMenuItems()\r\n},[])\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <div className=\"more-body\">\r\n        <Container>\r\n          <Row>\r\n            {menuItems.map(\r\n              (item) =>\r\n                item.category === \"burger\" && (\r\n                  <Col className=\"col-xs-1 more-body order-col\" key={item.name}>\r\n                    <Card key={item.name}>\r\n                      <Card.Body>\r\n                        <Card.Title>{item.name}</Card.Title>\r\n                        <Card.Subtitle>{item.price}</Card.Subtitle>\r\n                        <Card.Body>{item.description}</Card.Body>\r\n                        <div className=\"order-button\">\r\n                          <Button\r\n                            className=\"center-button\"\r\n                            variant=\"primary\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleOrder(item._id)}\r\n                          >\r\n                            Add To Cart\r\n                          </Button>\r\n                          {/* <Link to={{ pathname: '/cart', state: {item: item._id}}}>Order</Link> */}\r\n                        </div>\r\n                        <Card.Img\r\n                          as={Image}\r\n                          src={item.image ? imgSrc + item.image : burger}\r\n                          fluid={true}\r\n                          alt=\"Card Image\"\r\n                        />\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n            )}\r\n          </Row>\r\n          {/* <Button onClick={() => deactivateCart()}>Deactivate</Button> */}\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","export const getMenuItems = () =>\r\n  fetch(\"menu/menuItems\", {\r\n    method: \"GET\",\r\n  });\r\n\r\nexport const getMenuItem = (menuItem) =>\r\n  fetch(`menu/menuItems/${menuItem}`, {\r\n    method: \"GET\",\r\n  });\r\n\r\nexport const addMenuItem = (menuItem) =>\r\n  fetch(\"menu/add\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(menuItem),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n","import React from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\"\r\nimport \"../css/banner.css\";\r\nimport burger from \"../static/Floating-burger-PNG.png\";\r\nimport bacon from \"../static/Blue-Cheese-Burger.jpg\";\r\nimport chicken from \"../static/grilledchickenburger.png\"\r\nimport SplitText from \"./splittext.component\";\r\nimport Home from \"./home.component\";\r\n\r\nexport default function Banner(props) {\r\n  return (\r\n    <>\r\n      <div className=\"home-main\">\r\n        <Carousel indicators={false}>\r\n          <Carousel.Item interval={10000}>\r\n          <Carousel.Caption className=\"first-slide\">\r\n              <Container>\r\n                <Row className=\"h-0\">\r\n                  <Col className=\"col-8\">\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"featured\">\r\n                          <span className=\"right\">\r\n                            <SplitText copy=\"Featured Item\"></SplitText>\r\n                          </span>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"bumper\">\r\n                          <SplitText\r\n                            copy=\"The Best Burger In Town!\"\r\n                            role=\"heading\"\r\n                          ></SplitText>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-50\">\r\n                      <Col>\r\n                        <div className=\"item-div\">\r\n                          <h3 className=\"item-name\">\r\n                            The Classic:{\" \"}\r\n                            <span className=\"item-price\">$7.99</span>\r\n                          </h3>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col className=\"col-4\">\r\n                    <Image loading=\"lazy\" src={burger} />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item\r\n            interval={25}\r\n            className=\"transition-slide\"\r\n          ></Carousel.Item>\r\n          <Carousel.Item interval={10000}>\r\n          <Carousel.Caption className=\"second-slide\">\r\n              <Container>\r\n                <Row className=\"h-0\">\r\n                  <Col className=\"col-8\">\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"featured\">\r\n                          <span className=\"right\">\r\n                            <SplitText copy=\"Featured Item\"></SplitText>\r\n                          </span>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"bumper\">\r\n                          <SplitText\r\n                            copy=\"Make a Cow Happy!\"\r\n                            role=\"heading\"\r\n                          ></SplitText>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-50\">\r\n                      <Col>\r\n                        <div className=\"item-div\">\r\n                          <h3 className=\"item-name\">\r\n                            Chicken Sandwich:{\" \"}\r\n                            <span className=\"item-price\">$8.99</span>\r\n                          </h3>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col className=\"col-4\">\r\n                    <Image loading=\"lazy\" src={chicken} fluid={true} />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item\r\n            interval={25}\r\n            className=\"transition-slide\"\r\n          ></Carousel.Item>\r\n          <Carousel.Item interval={10000}>\r\n            <Carousel.Caption className=\"third-slide\">\r\n              <Container>\r\n                <Row className=\"h-0\">\r\n                  <Col className=\"col-8\">\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"featured\">\r\n                          <span className=\"right\">\r\n                            <SplitText copy=\"Weekly Special\"></SplitText>\r\n                          </span>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-25\">\r\n                      <Col>\r\n                        <h3 className=\"bumper\">\r\n                          <SplitText\r\n                            copy=\"Who doesn't love Blue Bacon!\"\r\n                            role=\"heading\"\r\n                          ></SplitText>\r\n                        </h3>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"h-50\">\r\n                      <Col>\r\n                        <div className=\"item-div\">\r\n                          <h3 className=\"item-name\">\r\n                            Bacon Blue Burger:{\" \"}\r\n                            <span className=\"item-price\">$11.00</span>\r\n                          </h3>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col className=\"col-4\">\r\n                    <Image loading=\"lazy\" src={bacon} fluid={true} />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item\r\n            interval={25}\r\n            className=\"transition-slide\"\r\n          ></Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n      <div className=\"more-body\">\r\n        {/* <Home /> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../css/home.css\";\r\nimport Banner from \"./banner.component\";\r\nimport { updateCart,updateCartitems } from \"../actions/cart\";\r\n\r\nconst imgSrc = \"http://localhost:4001/images/\";\r\n\r\nconst mapStateToProps = ({\r\n  session: { userId, userName, userRole },\r\n  menuItems,\r\n  cart,\r\n  cartItems,\r\n}) => ({\r\n  userId,\r\n  userName,\r\n  userRole,\r\n  menuItems,\r\n  cart,\r\n  cartItems\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCart: (cart) => dispatch(updateCart(cart)),\r\n  setCartItems: (item) => dispatch(updateCartitems(item))\r\n});\r\n\r\nfunction Menu({ menuItems, userId, cart, history, updateCart, setCartItems, cartItems }) {\r\n  const handleOrder = (item) => {\r\n    if (!userId) {\r\n      console.log(\"Not Logged in\");\r\n      history.push(\"/login\");\r\n      // <Redirect to='/login' />\r\n    } else {\r\n      // console.log(cart);\r\n      if (!cart || cart.active === false) {\r\n        const newCart = {\r\n          customer: userId,\r\n          items: [{ item: item }],\r\n          active: true,\r\n        };\r\n        updateCart(newCart);\r\n        setCartItems(item)\r\n      } else {\r\n        const updatedCart = {\r\n          _id: cart._id,\r\n          customer: userId,\r\n          items: [{ item: item }],\r\n          active: true,\r\n        };\r\n        console.log(updatedCart)\r\n        updateCart(updatedCart);\r\n        setCartItems(item)\r\n      }\r\n    }\r\n  };\r\n  console.log(cart)\r\n  console.log(cartItems)\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <div className=\"more-body menu-body\">\r\n        <Container className=\"menu-container\">\r\n          <ul>\r\n            <li key=\"burger\">\r\n              <div>{cart._id}</div>\r\n              <h1>Burgers</h1>\r\n              <ul>\r\n                {menuItems.map(\r\n                  (item) =>\r\n                    item.category === \"burger\" && (\r\n                      <li key={item._id}>\r\n                        <div className=\"menu-listing\">\r\n                          <h4 className=\"alignLeft\">{item.name}</h4>\r\n                          <h4 className=\"alignRight\">{item.price}</h4>\r\n                          <div className=\"clear\"></div>\r\n                        </div>\r\n                        <div className=\"alignLeft\">{item.description}</div>\r\n                        <Button\r\n                          className=\"alignRight order-button center-button\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleOrder(item._id)}\r\n                        >\r\n                          Add To Cart\r\n                        </Button>\r\n                        <div className=\"clear\"></div>\r\n                      </li>\r\n                    )\r\n                )}\r\n              </ul>\r\n            </li>\r\n            <li key=\"sandwich\">\r\n              <h1>Sandwiches</h1>\r\n              {menuItems.map(\r\n                (item) =>\r\n                  item.category === \"sandwich\" && (\r\n                    <li key={item._id}>\r\n                      <div className=\"menu-listing\">\r\n                        <h4 className=\"alignLeft\">{item.name}</h4>\r\n                        <h4 className=\"alignRight\">{item.price}</h4>\r\n                        <div className=\"clear\"></div>\r\n                      </div>\r\n                      <div className=\"alignLeft\">{item.description}</div>\r\n                      <Button\r\n                        className=\"alignRight order-button center-button\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleOrder(item._id)}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n                      <div className=\"clear\"></div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </li>\r\n            <li key=\"sides\">\r\n              <h1>Sides</h1>\r\n              {menuItems.map(\r\n                (item) =>\r\n                  item.category === \"sides\" && (\r\n                    <li key={item._id}>\r\n                      <div className=\"menu-listing\">\r\n                        <h4 className=\"alignLeft\">{item.name}</h4>\r\n                        <h4 className=\"alignRight\">{item.price}</h4>\r\n                        <div className=\"clear\"></div>\r\n                      </div>\r\n                      <div className=\"alignLeft\">{item.description}</div>\r\n                      <Button\r\n                        className=\"alignRight order-button center-button\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleOrder(item._id)}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n                      <div className=\"clear\"></div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </li>\r\n            <li key=\"drinks\">\r\n              <h1>Drinks</h1>\r\n              {menuItems.map(\r\n                (item) =>\r\n                  item.category === \"drinks\" && (\r\n                    <li key={item._id}>\r\n                      <div className=\"menu-listing\">\r\n                        <h4 className=\"alignLeft\">{item.name}</h4>\r\n                        <h4 className=\"alignRight\">{item.price}</h4>\r\n                        <div className=\"clear\"></div>\r\n                      </div>\r\n                      <div className=\"alignLeft\">{item.description}</div>\r\n                      <Button\r\n                        className=\"alignRight order-button center-button\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleOrder(item._id)}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n                      <div className=\"clear\"></div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { updateCart } from \"../actions/cart\";\r\nimport \"../css/cart.css\";\r\nimport { getMenuItem } from \"../util/menu\";\r\n\r\n// const mapStateToProps = ({cart}) => ({cart})\r\n\r\nconst mapStateToProps = ({\r\n  session: { userId, userName, userRole },\r\n  menuItems,\r\n  cart,\r\n  cartItems\r\n}) => ({\r\n  userId,\r\n  userName,\r\n  userRole,\r\n  menuItems,\r\n  cart,\r\n  cartItems\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCart: (cart) => dispatch(updateCart(cart)),\r\n});\r\n\r\nfunction Cart({ cart, userName, cartItems }) {\r\n  let item = \"Your Cart is Empty\";\r\n  if (cart) {\r\n    item = cart._id;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-body\">\r\n      <Container className=\"cart-container\">\r\n        <Row>\r\n          <Col xs={8}>\r\n            <Container className=\"cart-container\">\r\n              <h3>Hello {userName}</h3>\r\n              <h4>Cart</h4>\r\n              {cartItems && cartItems.cartItems.map((item) => (\r\n                <div>{item.name}</div>\r\n              ))}\r\n              {!cart && (<div key={item._id}>{item}</div>)}\r\n            </Container>\r\n          </Col>\r\n          <Col xs={4}>\r\n            <Container className=\"cart-container\">\r\n              <Card.Body>\r\n                <Card.Title>Order Now</Card.Title>\r\n              </Card.Body>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport {postFetch} from '../hooks/api'\r\n\r\nexport default function Add(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [options, setOptions] = useState({\r\n    protein: [],\r\n    cheese: [],\r\n    adds: [],\r\n    veg: [],\r\n    sauce: [],\r\n  });\r\n\r\n  const optionList = [\r\n    {\r\n      protein: {\r\n        enum: [\"burger\", \"chicken\", \"veggie\"],\r\n        default: \"burger\",\r\n        type: \"text\",\r\n      },\r\n      cheese: {\r\n        enum: [\"swiss\", \"cheddar\", \"pepperjack\", \"american\", \"blue\"],\r\n        type: \"text\",\r\n      },\r\n      adds: {\r\n        enum: [\"bacon\", \"avacado\"],\r\n        type: \"select\",\r\n      },\r\n      veg: {\r\n        enum: [\r\n          \"onions\",\r\n          \"tomato\",\r\n          \"lettuce\",\r\n          \"mushrooms\",\r\n          \"grilledonions\",\r\n          \"pickles\",\r\n        ],\r\n        type: \"select\",\r\n      },\r\n      sauce: {\r\n        enum: [\"mayo\", \"ketchup\", \"mustard\", \"special\"],\r\n        type: \"select\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(options);\r\n\r\n    const menuItem = {\r\n      name: name,\r\n      description: description,\r\n      category: category,\r\n      image: image,\r\n      price: price,\r\n      options: options.length > 1 ? options: {},\r\n    };\r\n    console.log(menuItem);\r\n    fetch(\"http://localhost:4001/menu/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(menuItem),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(JSON.stringify(err));\r\n      });\r\n  };\r\n  const handleOptions = (e, evt) => {\r\n    if (typeof evt === \"object\") {\r\n      var selected = [...evt].map((o) => o.value);\r\n    } else {\r\n       selected = evt;\r\n    }\r\n    setOptions((prevState) => ({\r\n      ...prevState,\r\n      [e]: selected,\r\n    }));\r\n  };\r\n  return (\r\n    <div className=\"more-body\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group control=\"formadditem\">\r\n          <Form.Label>Item Name</Form.Label>\r\n          <Form.Control\r\n            key=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Item Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <Form.Label>Item Category</Form.Label>\r\n          <Form.Control\r\n            key=\"category\"\r\n            type=\"text\"\r\n            placeholder=\"Item Category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          />\r\n          <Form.Label>Item Description</Form.Label>\r\n          <Form.Control\r\n          key=\"description\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <Form.Label>Item Image</Form.Label>\r\n          <Form.Control\r\n          key=\"image\"\r\n            type=\"text\"\r\n            placeholder=\"Item Image href\"\r\n            value={image}\r\n            onChange={(e) => setImage(e.target.value)}\r\n          />\r\n          <Form.Label>Item Price</Form.Label>\r\n          <Form.Control\r\n          key=\"price\"\r\n            type=\"text\"\r\n            placeholder=\"Item Price\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n          <Form.Label>Options</Form.Label>\r\n          <div></div>\r\n          {optionList.map((option) =>\r\n            Object.keys(option).map((e) => {\r\n              let type = option[e].type;\r\n              return (\r\n                <>\r\n                  <Form.Label key={e}>{e}</Form.Label>\r\n                  {type === \"text\" && (\r\n                    <Form.Control\r\n                      key={e + 1}\r\n                      as=\"select\"\r\n                      // value={options[e]}\r\n                      onChange={(evt) => handleOptions(e, evt.target.value)}\r\n                    >\r\n                      {option[e].enum.map((v) => (\r\n                        <option key={v}>{v}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  )}\r\n                  {type === \"select\" && (\r\n                    <Form.Control\r\n                    key={e + 2}\r\n                      as=\"select\"\r\n                      multiple\r\n                      // value={options[e]}\r\n                      onChange={(evt) =>\r\n                        handleOptions(e, evt.target.selectedOptions)\r\n                      }\r\n                    >\r\n                      {option[e].enum.map((v) => (\r\n                        <option key={v}>{v}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  )}\r\n                </>\r\n              );\r\n            })\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nfunction Register(props) {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n\r\n    const [role, setRole] = useState(\"Customer\")\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const user = {\r\n            \"name\": name,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"password2\": password2,\r\n            \"role\": role\r\n        }\r\n        console.log(user)\r\n        fetch(\"/users/register\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then(res => res.json())\r\n        .then((res) => {\r\n            console.log(res)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"more-body\">\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group control=\"formadditem\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} />\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Confirm Password\" onChange={e => setPassword2(e.target.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Register.propTypes = {\r\n//     registerUser: PropTypes.func.isRequired,\r\n//     auth: PropTypes.object.isRequired,\r\n//     errors: PropTypes.object.isRequired\r\n//   };\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(Register);","import axios from \"axios\";\r\nimport setAuthToken from \"../util/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { connect } from \"react-redux\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { login } from \"../actions/session\"\r\n\r\nconst mapStateToProps = ({ errors }) => ({\r\n    errors\r\n  });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    login: user => dispatch(login(user))\r\n  });\r\n\r\nconst Login = ({ login }) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const loginUser = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }\r\n        console.log(loginUser)\r\n        login(loginUser)  \r\n    }\r\n\r\n    return (\r\n        <div className=\"more-body\">\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group control=\"formadditem\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"text\"  value={email} onChange={e => setEmail(e.target.value)} />\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Login);","// import { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { AuthRoute, ProtectedRoute } from \"./util/route\";\n// import { useDispatch, useSelector } from 'react-redux';\nimport { connect } from \"react-redux\";\nimport { logout } from \"./actions/session\";\n\n\n// import \"react-animated-slider/build/horizontal.css\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Menu from \"./components/menu.component\";\nimport Order from \"./components/order.component\";\nimport Cart from \"./components/cart.component\";\nimport Add from \"./components/admin_add.component\";\nimport Register from \"./components/register.component\";\nimport Login from \"./components/login.component\";\nimport Banner from \"./components/banner.component\";\nimport Home from \"./components/home.component\"\nimport homeComponent from \"./components/home.component\";\n\nconst mapStateToProps = ({ session: { userId, userName, userRole}, menuItems, cart}) => ({\n  userId, userName, userRole, menuItems, cart\n});\n// console.log(menuItems)\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logout())\n});\nfunction App({userId, userName, userRole, logout }) {\n  return (\n    <Router>\n      <div className=\"container\">\n        <header>\n          <Navbar expand=\"lg\">\n            <Navbar.Brand href=\"/\">BurgerBurger</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\" key=\"home\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"navbar-item\" key=\"menu\">\n                  <Link to=\"/menu\" className=\"nav-link\">\n                    Menu\n                  </Link>\n                </li>\n                 {/* <li className=\"navbar-item\" key=\"order\">\n                  <Link to=\"/order\" className=\"nav-link\">\n                    Order\n                  </Link>\n                </li> */}\n                <li className=\"navbar-item\" key=\"cart\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                  </Link>\n                </li>\n                {!userId && (\n                  <li className=\"navbar-item\" key=\"register\">\n                    <Link to=\"/register\" className=\"nav-link\">\n                      Register\n                    </Link>\n                  </li>\n                )}\n                {!userId && (\n                  <li className=\"navbar-item\" key=\"login\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n                )}\n                {userId && (\n                  <li className=\"navbar-item\" key=\"logout\">\n                    <Link to=\"\" onClick={logout} className=\"nav-link\">\n                      Logout\n                      </Link>\n                  </li>\n                )}\n                {(userId && userRole === \"Admin\") && (\n                  <li className=\"navbar-item\" key=\"add\">\n                    <Link to=\"/add\" className=\"nav-link\">\n                      Add\n                    </Link>\n                  </li>\n                )}\n              </ul>\n            </Navbar.Collapse>\n          </Navbar>\n        </header>\n        <br />\n\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/menu\" component={Menu} />\n        {/* <ProtectedRoute path=\"/order\" component={Order} /> */}\n        <Route path=\"/cart\" component={Cart} />\n        <ProtectedRoute path=\"/add\" component={Add} />\n        <AuthRoute path=\"/register\" component={Register} />\n        <AuthRoute path=\"/login\" component={Login} />\n      </div>\n    </Router>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n// export default App;\n","import {\r\n    RECEIVE_CURRENT_USER,\r\n    LOGOUT_CURRENT_USER\r\n  } from \"../../actions/session\";\r\n  \r\n  const _nullSession = { userId: null, username: null }\r\n  export default (state = _nullSession, { type, user }) => {\r\n    Object.freeze(state);\r\n    switch (type) {\r\n      case RECEIVE_CURRENT_USER:\r\n        return user;\r\n      case LOGOUT_CURRENT_USER:\r\n        return _nullSession;\r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n    SET_CURRENT_CART_ITEM\r\n} from \"../../actions/cart\"\r\n\r\nconst intialCartState = {\r\n    cartItems:[]\r\n}\r\nexport default (state = intialCartState, {type, cartItem}) => {\r\n    Object.freeze(state)\r\n    switch (type) {\r\n        case SET_CURRENT_CART_ITEM:\r\n            // return [...cartItems, cartItems]\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, cartItem]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errors from \"./errors/errors\";\r\nimport session from \"./session/session\";\r\nimport menuItems from \"./menu/menu\"\r\nimport cart from \"./cart/cart\"\r\nimport cartItems from \"./cart/cartItems\"\r\n\r\nexport default combineReducers({\r\n  session,\r\n  menuItems,\r\n  errors,\r\n  cart, \r\n  cartItems\r\n});","import {\r\n    GET_MENU_ITEMS,\r\n    GET_MENU_ITEM,\r\n    ADD_MENU_ITEM\r\n} from \"../../actions/menu\"\r\n\r\nexport default (state = \"\", {type, menuItem, menuItems}) => {\r\n    console.log(state)\r\n    console.log(menuItems)\r\n    Object.freeze(state)\r\n    switch (type) {\r\n        case GET_MENU_ITEMS:\r\n            return menuItems;\r\n        case GET_MENU_ITEM:\r\n            return menuItem;\r\n        case ADD_MENU_ITEM:\r\n            return menuItem;\r\n        default:\r\n            return state\r\n    }\r\n}","import { RECEIVE_CURRENT_USER } from \"../../actions/session\";\r\nimport { CLEAR_ERRORS, RECEIVE_ERRORS } from \"../../actions/errors\";\r\n\r\nexport default (state = \"\", { message, type }) => {\r\n  Object.freeze(state);\r\n  switch (type) {\r\n    case RECEIVE_ERRORS:\r\n      return message;\r\n    case RECEIVE_CURRENT_USER:\r\n    case CLEAR_ERRORS:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n    GET_CURRENT_CART,\r\n    UPDATE_CURRENT_CART\r\n} from \"../../actions/cart\"\r\n\r\nexport default (state = \"\", {type, cart}) => {\r\n    Object.freeze(state)\r\n    switch (type) {\r\n        case GET_CURRENT_CART:\r\n            return cart;\r\n        case UPDATE_CURRENT_CART:\r\n            return cart;\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../reducers/root\";\r\n\r\nconst store =  preloadedState => (\r\n  createStore(\r\n    reducer, \r\n    preloadedState, \r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport configureStore from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { checkLoggedIn } from \"./util/session\";\n\nconst renderApp = preloadedState => {\n  const store = configureStore(preloadedState);\n  window.state = store.getState;\n  console.log(preloadedState)\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n// await checkLoggedIn()\n(async () => renderApp(await checkLoggedIn()))();"],"sourceRoot":""}